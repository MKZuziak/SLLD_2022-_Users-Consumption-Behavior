axis(2, at=0:100,labels=0:100)
axis(1,at=1:ncol(data_pca),labels=1:ncol(data_pca))
grid()
loadings <- res$rotation
PC1 = loadings[0-30, 1]
PC2 = loadings[0-30, 2]
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE )    # Avoid text overlapping
# TODO: Scatter plot for users.
pcarob <- PcaHubert(data_pca, k=4, alpha=0.75, scale = TRUE)
par(mfrow=c(1,2))
plot(pcarob)
pcarob2 <- PcaHubert(data_pca, k=2)
plot(pcarob2)
screeplot(pcarob, main='Robust PCA')
screeplot(res, main='Standard PCA') #Res is a standard PCA performed by prcomp(data_pca, scale = TRUE)
varpca <- get_pca_var(res)
corrplot(varpca$cos2, is.corr=FALSE)
help(get_pca_var)
help(corrplot)
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca$cos2
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca$cos2[1]
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca$cos2[,1]
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca$cos2[,1-5]
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca$cos2[,1:5]
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca$cos2[,1:6]
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca <- order(varpca$cos2[,1:6])
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca <- order(varpca$cos2[,1:6])
varpca
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca <- varpca$cos2[,1:6]
varpca
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca <- varpca$cos2[,1:6]
varpca <- varpca[order()]
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca <- varpca$cos2[,1:6]
varpca <- varpca[order()]
varpca
varpca <- get_pca_var(res)
#corrplot(varpca$cos2, is.corr=FALSE)
varpca <- varpca$cos2[,1:6]
#varpca <- varpca[order()]
varpca
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1:6]
corrplot(varpca, is.corr=FALSE)
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1]
corrplot(varpca, is.corr=FALSE)
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1]
varpca
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1]
varpca <- varpca[order(varpca)]
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1]
varpca <- varpca[order(varpca)]
varpca
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1]
varpca <- as.data.frame(varpca[order(varpca)])
varpca
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,2] # First two dimensions
varpca
#varpca <- varpca[order()]
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1:2] # First two dimensions
varpca
#varpca <- varpca[order()]
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1:2] # First two dimensions
varpca$Dim.2
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1:2] # First two dimensions
varpca
#varpca <- varpca[order(varpca$Dim.2)]
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1:2] # First two dimensions
varpca[2]
#varpca <- varpca[order(varpca$Dim.2)]
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1:2] # First two dimensions
varpca[,2]
#varpca <- varpca[order(varpca$Dim.2)]
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1:2] # First two dimensions
varpca <- varpca[order(varpca[,1])]
varpca <- get_pca_var(res)
varpca <- varpca$cos2[,1:2] # First two dimensions
varpca <- varpca[order(varpca[,1])]
varpca
varpca <- get_pca_var(res)
varpca <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions
varpca <- varpca[order(varpca[,1])]
varpca <- get_pca_var(res)
varpca <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions
arrange(varpca, 'Dim.1')
varpca <- get_pca_var(res)
varpca <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions
varpca <- arrange(varpca, 'Dim.1')
varpca
varpca <- get_pca_var(res)
varpca <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions
varpca <- arrange(varpca, 'Dim.1')
varpca <- varpca[1-35,]
varpca
varpca <- get_pca_var(res)
varpca <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions
varpca <- arrange(varpca, 'Dim.1')
varpca <- varpca[1:35,]
varpca
varpca <- get_pca_var(res)
varpca_dim_2 <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions, only the most important 35 values (for the first dimension)
varpca_dim_2 <- arrange(varpca, 'Dim.1')
varpca_dim_2
varpca <- get_pca_var(res)
varpca_dim_2 <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions, only the most important 35 values (for the first dimension)
varpca_dim_2 <- arrange(varpca_dim_2, 'Dim.1')
varpca_dim_2 <- varpca_dim_2[1:35,]
varpca_dim2i <- as.data.frame(varpca$cos2[,1:2])
varpca_dim2i <- arrange(varpca_dim2i, 'Dim.2') # First two dimensions, only the most important 35 values (for the second dimension)
varpca_dim2i <- varpca_dim_2[1:35,]
corrplot(varca_dim_2, is.corr=FALSE)
varpca <- get_pca_var(res)
varpca_dim_2 <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions, only the most important 35 values (for the first dimension)
varpca_dim_2 <- arrange(varpca_dim_2, 'Dim.1')
varpca_dim_2 <- varpca_dim_2[1:35,]
varpca_dim2i <- as.data.frame(varpca$cos2[,1:2])
varpca_dim2i <- arrange(varpca_dim2i, 'Dim.2') # First two dimensions, only the most important 35 values (for the second dimension)
varpca_dim2i <- varpca_dim_2[1:35,]
corrplot(varpca_dim_2, is.corr=FALSE)
varpca <- get_pca_var(res)
varpca_dim_2 <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions, only the most important 35 values (for the first dimension)
varpca_dim_2 <- arrange(varpca_dim_2, 'Dim.1')
varpca_dim_2 <- varpca_dim_2[1:35,]
varpca_dim2i <- as.data.frame(varpca$cos2[,1:2])
varpca_dim2i <- arrange(varpca_dim2i, 'Dim.2') # First two dimensions, only the most important 35 values (for the second dimension)
varpca_dim2i <- varpca_dim_2[1:35,]
corrplot(varpca_dim_2, is.corr=FALSE)
varpca <- get_pca_var(res)
varpca_dim_2 <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions, only the most important 35 values (for the first dimension)
varpca_dim_2 <- arrange(varpca_dim_2, 'Dim.1')
varpca_dim_2 <- varpca_dim_2[1:35,]
varpca_dim2i <- as.data.frame(varpca$cos2[,1:2])
varpca_dim2i <- arrange(varpca_dim2i, 'Dim.2') # First two dimensions, only the most important 35 values (for the second dimension)
varpca_dim2i <- varpca_dim_2[1:35,]
corrplot(varpca_dim_2, is.corr=FALSE)
View(varpca_dim_2)
View(varpca_dim2i)
View(varpca_dim_2)
View(varpca)
varpca <- get_pca_var(res)
varpca_dim_2 <- as.data.frame(varpca$cos2[,1:2]) # First two dimensions, only the most important 35 values (for the first dimension)
varpca_dim_2 <- arrange(varpca_dim_2, 'Dim.1')
varpca_dim_2 <- varpca_dim_2[1:35,]
varpca_dim2i <- as.data.frame(varpca$cos2[,1:2])
varpca_dim2i <- arrange(varpca_dim2i, 'Dim.2') # First two dimensions, only the most important 35 values (for the second dimension)
varpca_dim2i <- varpca_dim_2[1:35,]
corrplot(varpca_dim_2, is.corr=FALSE)
help(corrplot)
varpca <- get_pca_var(res)
corrplot(varpca$cos2, order="hclust", type="upper")
install.packages("lares")
library(mvtnorm)
library(factoextra)
library(scales)
library(ellipse)
library(corrplot)
library(ggplot2)
library(dplyr)
library(rrcov)
library(stats)
library(lares)
varpca <- get_pca_var(res)
corr_cross(data_frame, # dataset
max_pvalue = 0.05, # show only sig. correlations at selected level
top = 10) # display top 10 correlations, any couples of variables )
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, # dataset
max_pvalue = 0.05, # show only sig. correlations at selected level
top = 10) # display top 10 correlations, any couples of variables )
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
varpca <- varpca$cos2
varpca
#corr_cross(varpca$cos2, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
varpca <- varpca$cos2
varpca
corr_cross(varpca, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
varpca <- varpca$cos2
varpca <- as.data.frame(varpca)
corr_cross(varpca, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
varpca <- varpca$cos2
varpca <- as.data.frame(varpca)
varpca <- t(varpca)
corr_cross(varpca, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
varpca <- varpca$cos2
varpca <- as.data.frame(varpca)
varpca <- t(varpca)
varpca
#corr_cross(varpca, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
varpca <- varpca$cos2
varpca <- as.data.frame(varpca)
varpca <- t(varpca)
varpca <- as.data.frame(varpca)
corr_cross(varpca, max_pvalue = 0.05, top = 10)
varpca <- get_pca_var(res)
varpca <- varpca$cos2
varpca <- as.data.frame(varpca)
varpca <- t(varpca)
varpca <- as.data.frame(varpca)
corr_cross(varpca, max_pvalue = 0.05, top = 40)
varpca <- get_pca_var(res)
varpca <- varpca$cos2
varpca <- as.data.frame(varpca)
varpca <- t(varpca)
varpca <- as.data.frame(varpca)
corr_cross(varpca, max_pvalue = 0.05, top = 20)
loadings <- res$rotation
PC1 = loadings[0-30, 1]
PC2 = loadings[0-30, 2]
res
help(fviz_pca_var)
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, label = 'var')    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, label = 'quanti.sup')    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, label = 'quali')    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, select.var = list[contrib = 2])    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, select.var = list(contrib = 2)    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, select.var = list(contrib = 2))    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, select.var = list(contrib > 2))    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, select.var = list(contrib = 20))    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE)    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, select.var = list(contrib = 20))    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, select.var = list(contrib = 20))    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, select.var = list(contrib = 20))    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 20))    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10))    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10), select_id = list(contrib = 40), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10), select_ind = list(contrib = 40), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10), select.ind = list(contrib = 40), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10), select.ind = list(contrib = 40), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [arrow + text]")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, geom = c('point', 'text'), select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [arrow + text]")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, select.var = list(contrib = 10), select.ind = list(contrib = 40), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [arrow + text]")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, geom = c('point', 'text'), select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [point + text]")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), select.ind = list(contrib = 40), title="PCA:2D - Contribution plot of the top 10 contributing active variables")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [arrow + text]")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, geom = c('point', 'text'), select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [point + text]")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 30), select.ind = list(contrib = 40), title="PCA:2D - Contribution plot of the top 10 contributing active variables and 30 individuals")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [arrow + text]")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, geom = c('point', 'text'), select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [point + text]")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), select.ind = list(contrib = 30), title="PCA:2D - Contribution plot of the top 10 contributing active variables and 30 individuals")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [arrow + text]")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, geom = c('point', 'text'), select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [point + text]")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), select.ind = list(contrib = 30), title="PCA:2D - Contribution plot of the top 10 contributing active variables and 30 individuals")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, title="PCA:2D - Contribution plot of the top 10 contributing active variables and 30 individuals")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), geom = c('point'),
repel = TRUE, title="PCA:2D - Contribution plot of the all variables")    # Avoid text overlapping
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [arrow + text]")
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, geom = c('point', 'text'), select.var = list(contrib = 10), title="PCA:2D - Contribution plot of the top 10 contributing active variables [point + text]")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, select.var = list(contrib = 10), select.ind = list(contrib = 30), title="PCA:2D - Contribution plot of the top 10 contributing active variables and 30 individuals")
fviz_pca_biplot(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = FALSE, title="PCA:2D - Complete Biplot")
help("dist")
data_dist <- dist(data_pca)
data_dist
